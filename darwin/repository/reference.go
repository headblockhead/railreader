package repository

import (
	"context"
	"fmt"
	"log/slog"

	"github.com/jackc/pgx/v5"
)

type ReferenceRow struct {
	ID string
}

type Reference interface {
	Insert(reference ReferenceRow) error
}

type PGXReference struct {
	ctx context.Context
	log *slog.Logger
	tx  pgx.Tx
}

func NewPGXReference(ctx context.Context, log *slog.Logger, tx pgx.Tx) PGXReference {
	return PGXReference{
		ctx: ctx,
		log: log,
		tx:  tx,
	}
}

func (rr PGXReference) Insert(reference ReferenceRow) error {
	rr.log.Debug("inserting Reference")
	if _, err := rr.tx.Exec(rr.ctx, `
			INSERT INTO references
				VALUES (
					@reference_id
				); 
		`, pgx.StrictNamedArgs{
		"reference_id": reference.ID,
	}); err != nil {
		return fmt.Errorf("failed to insert reference %s: %w", reference.ID, err)
	}
	return nil
}

type LocationRow struct {
	LocationID                      string
	ComputerisedReservationSystemID *string
	TrainOperatingCompanyID         *string
	Name                            string
}

type TrainOperatingCompanyRow struct {
	TrainOperatingCompanyID string
	Name                    string
	URL                     *string
}

type LateReasonRow struct {
	LateReasonID int
	Description  string
}

type CancellationReasonRow struct {
	CancellationReasonID int
	Description          string
}

type ViaConditionRow struct {
	Sequence                        int
	DisplayAtLocationID             string
	FirstRequiredCallingLocationID  string
	SecondRequiredCallingLocationID *string
	DestinationRequiredLocationID   string
	Text                            string
}

type CustomerInformationSystemRow struct {
	CustomerInformationSystemID string
	Name                        string
}

type LoadingCategoryRow struct {
	// ID is generated by the database.
	LoadingCategoryCode     string
	TrainOperatingCompanyID *string
	Name                    string
	DescriptionTypical      string
	DescriptionExpected     string
	Definition              string
	// can probably ignore these
	Colour string
	Image  string
}
