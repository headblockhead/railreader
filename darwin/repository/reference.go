package repository

import (
	"context"
	"log/slog"

	"github.com/jackc/pgx/v5"
)

type ReferenceRowsSet struct {
	LocationRows                  []LocationRow
	TrainOperatingCompanyRows     []TrainOperatingCompanyRow
	LateReasonRows                []LateReasonRow
	CancellationReasonRows        []CancellationReasonRow
	ViaConditionRows              []ViaConditionRow
	CustomerInformationSystemRows []CustomerInformationSystemRow
	LoadingCategoryRows           []LoadingCategoryRow
}

type LocationRow struct {
	LocationID                      string
	ComputerisedReservationSystemID *string
	TrainOperatingCompanyID         *string
	Name                            string
}

type TrainOperatingCompanyRow struct {
	TrainOperatingCompanyID string
	Name                    string
	URL                     *string
}

type LateReasonRow struct {
	LateReasonID int
	Description  string
}

type CancellationReasonRow struct {
	CancellationReasonID int
	Description          string
}

type ViaConditionRow struct {
	Sequence                        int
	DisplayAtLocationID             string
	FirstRequiredCallingLocationID  string
	SecondRequiredCallingLocationID *string
	DestinationRequiredLocationID   string
	Text                            string
}

type CustomerInformationSystemRow struct {
	CustomerInformationSystemID string
	Name                        string
}

type LoadingCategoryRow struct {
	// ID is generated by the database.
	LoadingCategoryCode     string
	TrainOperatingCompanyID *string
	Name                    string
	DescriptionTypical      string
	DescriptionExpected     string
	Definition              string
	// can probably ignore these
	Colour string
	Image  string
}

type Reference interface {
	Insert(reference ReferenceRowsSet) error
}

type PGXReference struct {
	ctx context.Context
	log *slog.Logger
	tx  pgx.Tx
}

func NewPGXReference(ctx context.Context, log *slog.Logger, tx pgx.Tx) PGXReference {
	return PGXReference{
		ctx: ctx,
		log: log,
		tx:  tx,
	}
}

func (rr PGXReference) Insert(reference ReferenceRowsSet) error {
	rr.log.Debug("inserting Reference")
	for _, loc := range reference.Locations {
		rr.log.Debug("inserting LocationReference")
		if _, err := rr.tx.Exec(rr.ctx, `
			INSERT INTO locations
				VALUES (
					@location_id
					,@computerised_reservation_system_id
					,@train_operating_company_id
					,@name
				); 
		`, pgx.StrictNamedArgs{
			"location_id":                        string(loc.Location),
			"computerised_reservation_system_id": loc.CRS,
			"train_operating_company_id":         loc.TOC,
			"name":                               loc.Name,
		}); err != nil {
			return err
		}
	}
	for _, toc := range reference.TrainOperatingCompanies {
		rr.log.Debug("inserting TrainOperatingCompanyReference")
		if _, err := rr.tx.Exec(rr.ctx, `
			INSERT INTO train_operating_companies
				VALUES (
					@train_operating_company_id
					,@name
					,@url
				);
		`, pgx.StrictNamedArgs{
			"train_operating_company_id": toc.ID,
			"name":                       toc.Name,
			"url":                        toc.URL,
		}); err != nil {
			return err
		}
	}
	for _, reason := range reference.LateReasons {
		rr.log.Debug("inserting a late ReasonDescription")
		if _, err := rr.tx.Exec(rr.ctx, `
			INSERT INTO late_reasons
				VALUES (
					@late_reason_id
					,@description
				); 
		`, pgx.StrictNamedArgs{
			"late_reason_id": reason.ReasonID,
			"description":    reason.Description,
		}); err != nil {
			return err
		}
	}
	for _, reason := range reference.CancellationReasons {
		rr.log.Debug("inserting a cancellation ReasonDescription")
		if _, err := rr.tx.Exec(rr.ctx, `
			INSERT INTO cancellation_reasons
				VALUES (
					@cancellation_reason_id
					,@description
				); 
		`, pgx.StrictNamedArgs{
			"cancellation_reason_id": reason.ReasonID,
			"description":            reason.Description,
		}); err != nil {
			return err
		}
	}
	for _, cis := range reference.CustomerInformationSystems {
		rr.log.Debug("inserting a CustomerInformationSystem")
		if _, err := rr.tx.Exec(rr.ctx, `
			INSERT INTO customer_information_systems
				VALUES (
					@customer_information_system_id
					,@name
				);
		`, pgx.StrictNamedArgs{
			"customer_information_system_id": cis.CIS,
			"name":                           cis.Name,
		}); err != nil {
			return err
		}
	}
	return nil
}
