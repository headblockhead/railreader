CREATE SCHEMA IF NOT EXISTS darwin;
SET search_path TO darwin, public;

-- Reference data

CREATE TABLE IF NOT EXISTS darwin.references ( -- Reference data files that have been imported
				filename text PRIMARY KEY
				,imported_at timestamp WITH TIME ZONE NOT NULL
);

CREATE TABLE IF NOT EXISTS darwin.locations ( -- TIming Point LOCcations
				id text PRIMARY KEY 
				,crs_id text 
				,toc_id text
				,name text
				-- No foreign key constraint is used here because not all possible toc_ids are included in the reference data set.
);

CREATE TABLE IF NOT EXISTS darwin.tocs ( -- Train Operating Companies
				id text PRIMARY KEY
				,name text NOT NULL
				,url text 
);

-- late_reason IDs and cancellation_reason IDs overlap, so it is important to distinguish between them.

CREATE TABLE IF NOT EXISTS darwin.late_reasons ( -- Reasons why a train service is running late.
				id int PRIMARY KEY 
				,description text NOT NULL
);

CREATE TABLE IF NOT EXISTS darwin.cancellation_reasons ( -- Reasons why a train service is cancelled.
				id int PRIMARY KEY
				,description text NOT NULL
);

CREATE TABLE IF NOT EXISTS darwin.via_conditions ( -- A set of conditions that must be met for a 'via' message to be displayed for a service.
				sequence int PRIMARY KEY -- Sequence number is important here, as only the lowest-numbered (first) matching via condition should be displayed.
				,display_at_crs_id text NOT NULL 
				,first_required_location_id text NOT NULL
				,second_required_location_id text 
				,destination_required_location_id text NOT NULL 
				,text text NOT NULL
);

CREATE TABLE IF NOT EXISTS darwin.cis ( -- Customer Information Systems 
				id text PRIMARY KEY 
				,name text NOT NULL
);

CREATE TABLE IF NOT EXISTS darwin.loading_categories ( -- Categories that can be used to represent a rough estimate on how full a train is
				code text NOT NULL
				,toc_id text
				,CONSTRAINT uq_code_toc UNIQUE NULLS NOT DISTINCT (code, toc_id)
				-- Default values for each code are specified here as records where toc_id is NULL.
				-- TOCs give an override for the default values of a code using a seperate record with the same code, but containing their toc_id.

				,name text NOT NULL 
				,description_typical text NOT NULL
				,description_expected	text NOT NULL
				,definition text NOT NULL
);

-- messagexml

CREATE TABLE IF NOT EXISTS darwin.message_xml ( -- Raw XML messages stored to use for debugging.
				id text PRIMARY KEY -- id as given by the Rail Data Marketplace
				,xml xml NOT NULL
				,kafka_offset bigint NOT NULL
);

-- pport

CREATE TABLE IF NOT EXISTS darwin.messages ( -- Successfully processed messages.
				id text PRIMARY KEY -- id as given by the Rail Data Marketplace
				,CONSTRAINT fk_message_xml FOREIGN KEY(id) REFERENCES message_xml(id) ON DELETE CASCADE
				,version text NOT NULL -- version of Darwin the message was generated by
				,sent_at timestamp WITH TIME ZONE NOT NULL
				,first_received_at timestamp WITH TIME ZONE NOT NULL -- The most recent time that railreader has recieved this message.

				-- If a status element is given:
				,status_code text -- The status of the message feed's connection to Darwin.
				,status_description text -- Human-readable description of the status code.

				-- If a response element is given:
				,response_is_snapshot boolean -- If false, the response is an 'update'. 
				,request_source text
				,request_source_system text
				,request_id text
);

-- timetable

CREATE TABLE IF NOT EXISTS darwin.timetables ( -- Timetable files that have been imported
				id text PRIMARY KEY
				,filename text NOT NULL
				,imported_at timestamp WITH TIME ZONE NOT NULL
);

-- schedule

CREATE TABLE IF NOT EXISTS darwin.schedules ( -- Schedule for a specific train service
				id text PRIMARY KEY -- this is the RID, renamed to be consistent with other tables

				-- sources
				,message_id text
				,CONSTRAINT fk_message FOREIGN KEY(message_id) REFERENCES messages(id) ON DELETE CASCADE
				,timetable_id text
				,CONSTRAINT fk_timetable FOREIGN KEY(timetable_id) REFERENCES timetables(id) ON DELETE CASCADE

				-- TrainIdentifiers
				,uid text NOT NULL
				,scheduled_start_date date NOT NULL

				-- Schedule
				,headcode text NOT NULL
				,retail_service_id text
				,toc_id text NOT NULL -- no foreign key contraint here, reference data on TOCs is not complete
				-- No foreign key constraint is used here because not all possible toc_ids are included in the reference data set.
				,service text NOT NULL
				,category text NOT NULL
				,is_passenger_service boolean NOT NULL
				,is_active boolean NOT NULL
				,is_deleted boolean NOT NULL
				,is_charter boolean NOT NULL

				,cancellation_reason_id int
				,CONSTRAINT fk_cancellation_reason FOREIGN KEY(cancellation_reason_id) REFERENCES cancellation_reasons(id)
				,cancellation_reason_location_id text
				,CONSTRAINT fk_cancellation_reason_location FOREIGN KEY(cancellation_reason_location_id) REFERENCES locations(id)
				,cancellation_reason_is_near_location boolean

				,late_reason_id int
				,CONSTRAINT fk_late_reason FOREIGN KEY(late_reason_id) REFERENCES late_reasons(id)
				,late_reason_location_id text
				,CONSTRAINT fk_late_reason_location FOREIGN KEY(late_reason_location_id) REFERENCES locations(id)
				,late_reason_is_near_location boolean

				,diverted_via_location_id text
				,CONSTRAINT fk_diverted_via_location FOREIGN KEY(diverted_via_location_id) REFERENCES locations(id)

				-- Journey
				,is_cancelled boolean NOT NULL
);

CREATE TABLE IF NOT EXISTS darwin.schedule_locations ( -- Locations that a schedule visits
				schedule_id text
				,CONSTRAINT fk_schedule FOREIGN KEY(schedule_id) REFERENCES schedules(id) ON DELETE CASCADE
				,sequence int
				,PRIMARY KEY (schedule_id, sequence)

				-- Schedule
				,location_id text NOT NULL
				,CONSTRAINT fk_location FOREIGN KEY(location_id) REFERENCES locations(id)
				,activities text ARRAY
				,planned_activities text ARRAY
				,is_cancelled boolean NOT NULL
				,formation_id text
				,is_affected_by_diversion boolean NOT NULL

				,type text NOT NULL
				-- Times are given here as text so that they can be serached through in their original format. They can be converted to timestamps as needed.
				,public_arrival_time text 
				,public_departure_time text
				,working_arrival_time	text
				,working_passing_time text 
				,working_departure_time text 
				,routing_delay int -- in minutes
				,false_destination_location_id text
				,CONSTRAINT fk_false_destination_location FOREIGN KEY(false_destination_location_id) REFERENCES locations(id)

				,cancellation_reason_id int
				,CONSTRAINT fk_cancellation_reason FOREIGN KEY(cancellation_reason_id) REFERENCES cancellation_reasons(id)
				,cancellation_reason_location_id text
				,CONSTRAINT fk_cancellation_reason_location FOREIGN KEY(cancellation_reason_location_id) REFERENCES locations(id)
				,cancellation_reason_is_near_location boolean

				-- Journey
				,platform text
);

-- associations

CREATE TABLE IF NOT EXISTS darwin.associations ( -- Links between two schedules
				id uuid PRIMARY KEY -- Generated by railreader (not given by Darwin)

				-- sources
				,message_id text
				,CONSTRAINT fk_message FOREIGN KEY(message_id) REFERENCES messages(id) ON DELETE CASCADE
				,timetable_id text
				,CONSTRAINT fk_timetable FOREIGN KEY(timetable_id) REFERENCES timetables(id) ON DELETE CASCADE

				-- Association
				,category text NOT NULL -- 2-letter association category code (join, spilt, etc. - see type railreader.AssociationCategory)
				,is_cancelled boolean NOT NULL -- won't happen
				,is_deleted boolean NOT NULL -- doesn't exist
				,main_schedule_id text NOT NULL
				,CONSTRAINT fk_main_schedule FOREIGN KEY(main_schedule_id) REFERENCES schedules(id) ON DELETE CASCADE
				,main_schedule_location_sequence int NOT NULL -- sequence number in the schedule_locations table
				,CONSTRAINT fk_main_schedule_location FOREIGN KEY(main_schedule_id, main_schedule_location_sequence) REFERENCES schedule_locations(schedule_id, sequence) ON DELETE CASCADE
				,associated_schedule_id text NOT NULL
				,CONSTRAINT fk_associated_schedule FOREIGN KEY(associated_schedule_id) REFERENCES schedules(id) ON DELETE CASCADE
				,associated_schedule_location_sequence int NOT NULL -- sequence number in the schedule_locations table
				,CONSTRAINT fk_associated_schedule_location FOREIGN KEY(associated_schedule_id, associated_schedule_location_sequence) REFERENCES schedule_locations(schedule_id, sequence) ON DELETE CASCADE
);

-- alarms

CREATE TABLE IF NOT EXISTS darwin.alarms ( -- Alarms raised when Darwin has not recieved data from some of its sources.
		  	id int PRIMARY KEY -- Unique ID for the alarm.

				-- sources
				,message_id text
				,CONSTRAINT fk_message FOREIGN KEY(message_id) REFERENCES messages(id) ON DELETE CASCADE

				,received_at timestamp WITH TIME ZONE NOT NULL
				,has_cleared boolean NOT NULL
				,cleared_at timestamp WITH TIME ZONE
				,train_describer_failure text -- a specific train describer that is suspected to have failed
				,all_train_describers_failed boolean
				,tyrell_failed boolean
);

-- forecasts

CREATE TABLE IF NOT EXISTS darwin.forecasts (

);
